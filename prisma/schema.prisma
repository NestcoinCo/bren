generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  walletAddress    String        @id
  fid              Int           @unique
  display_name     String?
  username         String?
  pfp              String?
  isAllowanceGiven Boolean?
  allowanceGivenAt DateTime?     @default(now())
  type             UserType?
  sentTransactions Transaction[] @relation("FromUser")
}

model UserRankings {
  fid               Int    @id
  walletAddress     String @unique
  tipsReceived      Float? @default(0)
  tipsSent          Float? @default(0)
  tipsReceivedCount Int?   @default(0)
  tipsSentCount     Int?   @default(0)
}

model Transaction {
  castHash       String   @id
  fromAddress    String
  fromUsername   String
  toAddress      String?
  toUsername     String
  toFid          Int
  text           String
  link           String
  parentCastHash String?
  amount         Float
  createdAt      DateTime @default(now())
  fromFid        Int
  value          String
  fromUser       User     @relation("FromUser", fields: [fromAddress], references: [walletAddress])
}

model Invite {
  id                   String   @id @default(uuid())
  inviteeFid           Int
  inviteeWalletAddress String?
  invitorFid           Int
  invitorAddress       String?
  createdAt            DateTime @default(now())
  inviteePfp           String
  castHash             String
}

model BotReply {
  repliedAt    DateTime @default(now())
  botcastHash  String   @unique
  userCastHash String?  @unique
}

enum UserType {
  POWER_BADGE
  ALLIES
  SPLITTERS
  INVITED
  FOLLOWER
  WHITELISTED
}
